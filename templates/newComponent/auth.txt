// AuthContext.js
import React, { createContext, useContext, useState } from 'react';

const AuthContext = createContext();

export function AuthProvider({ children }) {
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  const login = () => {
    setIsLoggedIn(true);
  };

  const logout = () => {
    setIsLoggedIn(false);
  };

  return (
    <AuthContext.Provider value={{ isLoggedIn, login, logout }}>
      {children}
    </AuthContext.Provider>
  );
}

export function useAuth() {
  return useContext(AuthContext);
}

// PrivateRoute.js
import React from 'react';
import { useAuth } from './AuthContext';
import { Navigate, Route } from 'react-router-dom';

function PrivateRoute({ path, ...props }) {
  const { isLoggedIn } = useAuth();

  return isLoggedIn ? <Route path={path} {...props} /> : <Navigate to="/login" />;
}

export default PrivateRoute;



